---
- name: OpenStack service database(s), User(s)
  hosts: databases
  gather_facts: yes
  sudo: yes
  vars_files:
    - ../../program_vars/database_password

  tasks:
    - name: ensure keystone database is created
      mysql_db: >
            name={{keystone_db}}
            encoding=utf8
            state=present
      #when: "ansible_hostname == primary_database_host and 'keystone' in enable_services"

    - name: ensure keystone local user is created
      mysql_user: >
            name={{keystone_db_user}}
            password={{keystone_db_password}}
            host=localhost
            priv={{keystone_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure keystone remote user is created
      mysql_user: >
            name={{keystone_db_user}}
            password={{keystone_db_password}}
            host=localhost
            priv={{keystone_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure nova database is created
      mysql_db: >
            name={{nova_db}}
            encoding=utf8
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure nova local user is created
      mysql_user: >
            name={{nova_db_user}}
            password={{nova_db_password}}
            host=localhost
            priv={{nova_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure nova remote user is created
      mysql_user: >
            name={{nova_db_user}}
            password={{nova_db_password}}
            host=localhost
            priv={{nova_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure glance database is created
      mysql_db: >
            name={{glance_db}}
            encoding=utf8
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure glance local user is created
      mysql_user: >
            name={{glance_db_user}}
            password={{glance_db_password}}
            host=localhost
            priv={{glance_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure glance remote user is created
      mysql_user: >
            name={{glance_db_user}}
            password={{glance_db_password}}
            host=localhost
            priv={{glance_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure cinder database is created
      mysql_db: >
            name={{cinder_db}}
            encoding=utf8
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure cinder local user is created
      mysql_user: >
            name={{cinder_db_user}}
            password={{cinder_db_password}}
            host=localhost
            priv={{cinder_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure cinder remote user is created
      mysql_user: >
            name={{cinder_db_user}}
            password={{cinder_db_password}}
            host=localhost
            priv={{cinder_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure neutron database is created
      mysql_db: >
            name={{neutron_db}}
            encoding=utf8
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure neutron local user is created
      mysql_user: >
            name={{neutron_db_user}}
            password={{neutron_db_password}}
            host=localhost
            priv={{neutron_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

    - name: ensure neutron remote user is created
      mysql_user: >
            name={{neutron_db_user}}
            password={{neutron_db_password}}
            host=localhost
            priv={{neutron_db}}.*:ALL
            state=present
      #when: "ansible_hostname == primary_database_host"

